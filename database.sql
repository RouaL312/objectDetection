-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.t_commande_ligne
(
    id integer NOT NULL DEFAULT nextval('t_commande_ligne_id_seq'::regclass),
    fk_commande_vente integer NOT NULL,
    fk_ligne_commande integer NOT NULL,
    CONSTRAINT t_commande_ligne_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.t_commande_vente
(
    id_commande_vente integer NOT NULL DEFAULT nextval('t_commande_vente_id_commande_vente_seq'::regclass),
    date_creation timestamp without time zone NOT NULL DEFAULT now(),
    montant_total double precision NOT NULL,
    login character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT t_commande_vente_pkey PRIMARY KEY (id_commande_vente)
);

CREATE TABLE IF NOT EXISTS public.t_imageproduct
(
    id integer NOT NULL DEFAULT nextval('t_imageproduct_id_seq'::regclass),
    filename character varying(50) COLLATE pg_catalog."default" NOT NULL,
    filetype character varying(20) COLLATE pg_catalog."default" NOT NULL,
    filesize integer NOT NULL,
    filepath character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT t_imageproduct_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.t_ligne_commande
(
    id_ligne_cmd integer NOT NULL DEFAULT nextval('t_ligne_commande_id_ligne_cmd_seq'::regclass),
    fk_product integer NOT NULL,
    quantity integer NOT NULL,
    price_unitaire double precision NOT NULL,
    date_creation timestamp without time zone DEFAULT now(),
    CONSTRAINT t_ligne_commande_pkey PRIMARY KEY (id_ligne_cmd)
);

CREATE TABLE IF NOT EXISTS public.t_product
(
    id integer NOT NULL DEFAULT nextval('t_product_id_seq'::regclass),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    category character varying(30) COLLATE pg_catalog."default" NOT NULL,
    quantity integer NOT NULL,
    inventorystatus character varying(20) COLLATE pg_catalog."default" NOT NULL,
    rating numeric(2, 1) NOT NULL,
    url_image_prod character varying(200) COLLATE pg_catalog."default",
    code bigint NOT NULL,
    CONSTRAINT t_product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.t_user
(
    id_user integer NOT NULL DEFAULT nextval('t_user_t_user_id_seq'::regclass),
    username character varying(64) COLLATE pg_catalog."default",
    email character varying(120) COLLATE pg_catalog."default",
    password character varying(500) COLLATE pg_catalog."default",
    firstName character varying(64) COLLATE pg_catalog."default",
    gender character varying(8) COLLATE pg_catalog."default",
    profession character varying(64) COLLATE pg_catalog."default",
    is_admin boolean,
    address character varying(120) COLLATE pg_catalog."default",
    date_creation timestamp(6) without time zone,
    phone character varying(120) COLLATE pg_catalog."default",
    lastName character varying(64) COLLATE pg_catalog."default",
    dateDeNaissance date,
    codePostal character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT t_user_pkey PRIMARY KEY (id_user)
);

ALTER TABLE IF EXISTS public.t_commande_ligne
    ADD CONSTRAINT t_commande_ligne_fk_commande_vente_fkey FOREIGN KEY (fk_commande_vente)
    REFERENCES public.t_commande_vente (id_commande_vente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.t_commande_ligne
    ADD CONSTRAINT t_commande_ligne_fk_ligne_commande_fkey FOREIGN KEY (fk_ligne_commande)
    REFERENCES public.t_ligne_commande (id_ligne_cmd) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.t_commande_vente
    ADD CONSTRAINT login FOREIGN KEY (login)
    REFERENCES public.t_user (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.t_ligne_commande
    ADD CONSTRAINT t_ligne_commande_fk_product_fkey FOREIGN KEY (fk_product)
    REFERENCES public.t_product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;